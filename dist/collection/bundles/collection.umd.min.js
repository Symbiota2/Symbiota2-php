!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/cdk/collections"),require("@angular/cdk/tree"),require("@angular/material/tree"),require("rxjs"),require("@angular/material"),require("@angular/flex-layout"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("collection",["exports","@angular/core","@angular/cdk/collections","@angular/cdk/tree","@angular/material/tree","rxjs","@angular/material","@angular/flex-layout","@angular/forms","@angular/common"],t):t((e=e||self).collection={},e.ng.core,e.ng.cdk.collections,e.ng.cdk.tree,e.ng.material.tree,e.rxjs,e.ng.material,e.ng["flex-layout"],e.ng.forms,e.ng.common)}(this,function(e,t,n,o,l,c,r,a,i,s){"use strict";function d(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,l,c=n.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(o=c.next()).done;)r.push(o.value)}catch(a){l={error:a}}finally{try{o&&!o.done&&(n=c["return"])&&n.call(c)}finally{if(l)throw l.error}}return r}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(d(arguments[t]));return e}var m=function(){function e(){this.collections={root:{1:{name:"Southwest",collections:[{collid:10,collname:"Coll 10",colltype:"specimen"},{collid:11,collname:"Coll 11",colltype:"observation"},{collid:12,collname:"Coll 12",colltype:"specimen"}]},2:{name:"Northwest",collections:[{collid:20,collname:"Coll 20",colltype:"specimen"},{collid:21,collname:"Coll 21",colltype:"observation"},{collid:22,collname:"Coll 22",colltype:"specimen"}]},3:{name:"Rocky Mountain",collections:[{collid:30,collname:"Coll 30",colltype:"specimen"},{collid:31,collname:"Coll 31",colltype:"observation"},{collid:32,collname:"Coll 32",colltype:"specimen"}]},col40:{collid:40,collname:"Coll 40",colltype:"specimen"},col41:{collid:41,collname:"Coll 41",colltype:"specimen"},col42:{collid:42,collname:"Coll 42",colltype:"specimen"}}}}return e.prototype.getCollections=function(){return this.collections},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),h=function(){return function(){}}(),p=function(){return function(){}}(),g=function(){function e(e){this.collectionListService=e,this.dataChange=new c.BehaviorSubject([]),this.initialize(this.collectionListService.getCollections())}return e.prototype.initialize=function(e){var t=this.buildFileTree(e,0);this.dataChange.next(t)},e.prototype.buildFileTree=function(e,t){var n=this;return Object.keys(e).reduce(function(o,l){var c,r=new h;return e[l].collname?(c=e[l],r.name=e[l].collname,r.collid=e[l].collid):("root"===l?(c=e[l],r.name=l):(c=e[l].collections,r.name=e[l].name),r.children=n.buildFileTree(c,t+1)),o.concat(r)},[])},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:m}]},e}(),f=function(){function e(e){var t=this;this.database=e,this.flatNodeMap=new Map,this.nestedNodeMap=new Map,this.checklistSelection=new n.SelectionModel(!0),this.getLevel=function(e){return e.level},this.isExpandable=function(e){return e.expandable},this.getChildren=function(e){return e.children},this.hasChild=function(e,t){return t.expandable},this.transformer=function(e,n){var o=t.nestedNodeMap.get(e),l=o&&o.name===e.name?o:new p;return l.name=e.name,l.collid=e.collid,l.level=n,l.expandable=!!e.children,t.flatNodeMap.set(l,e),t.nestedNodeMap.set(e,l),l},this.treeFlattener=new l.MatTreeFlattener(this.transformer,this.getLevel,this.isExpandable,this.getChildren),this.treeControl=new o.FlatTreeControl(this.getLevel,this.isExpandable),this.dataSource=new l.MatTreeFlatDataSource(this.treeControl,this.treeFlattener),e.dataChange.subscribe(function(e){t.dataSource.data=e})}return e.prototype.descendantsAllSelected=function(e){var t=this;return this.treeControl.getDescendants(e).every(function(e){return t.checklistSelection.isSelected(e)})},e.prototype.descendantsPartiallySelected=function(e){var t=this;return this.treeControl.getDescendants(e).some(function(e){return t.checklistSelection.isSelected(e)})&&!this.descendantsAllSelected(e)},e.prototype.todoItemSelectionToggle=function(e){var t,n;this.checklistSelection.toggle(e);var o=this.treeControl.getDescendants(e);this.checklistSelection.isSelected(e)?(t=this.checklistSelection).select.apply(t,u(o)):(n=this.checklistSelection).deselect.apply(n,u(o))},e.prototype.ngAfterViewInit=function(){this.treeControl.expand(this.tree.treeControl.dataNodes[0])},e.decorators=[{type:t.Component,args:[{selector:"collection-checkbox-list",template:'<mat-tree #colltree [dataSource]="dataSource" [treeControl]="treeControl">\n    <mat-tree-node *matTreeNodeDef="let node" matTreeNodeToggle matTreeNodePadding>\n        <button mat-icon-button disabled></button>\n        <mat-checkbox class="checklist-leaf-node"\n                      [checked]="checklistSelection.isSelected(node)"\n                      (change)="checklistSelection.toggle(node);">{{node.name}}\n        </mat-checkbox>\n    </mat-tree-node>\n\n    <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding>\n        <button mat-icon-button matTreeNodeToggle\n                [attr.aria-label]="\'toggle \' + node.filename" *ngIf="treeControl.getLevel(node) > 0">\n            <mat-icon class="mat-icon-rtl-mirror">\n                {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n            </mat-icon>\n        </button>\n        <button mat-icon-button disabled *ngIf="treeControl.getLevel(node) === 0"></button>\n        <mat-checkbox [checked]="descendantsAllSelected(node)"\n                      [indeterminate]="descendantsPartiallySelected(node)"\n                      (change)="todoItemSelectionToggle(node)" *ngIf="treeControl.getLevel(node) > 0">\n            {{node.name}}\n        </mat-checkbox>\n        <mat-checkbox [checked]="descendantsAllSelected(node)"\n                      [indeterminate]="descendantsPartiallySelected(node)"\n                      (change)="todoItemSelectionToggle(node)" *ngIf="treeControl.getLevel(node) === 0">\n            Select all\n        </mat-checkbox>\n    </mat-tree-node>\n</mat-tree>\n',providers:[g],styles:[".mat-list-icon{color:rgba(0,0,0,.54)}"]}]}],e.ctorParameters=function(){return[{type:g}]},e.propDecorators={tree:[{type:t.ViewChild,args:["colltree",{"static":!1}]}]},e}(),y=[{name:"collection-collection-checkbox-list",component:f}],b=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[f],imports:[r.MatTreeModule,r.MatCheckboxModule,r.MatIconModule,r.MatButtonModule,a.FlexLayoutModule,i.ReactiveFormsModule,i.FormsModule,s.CommonModule],exports:[f],entryComponents:[f],providers:[m,{provide:"collection-checkbox-list",useValue:y,multi:!0}]}]}],e}();e.CollectionCheckboxListComponent=f,e.CollectionListService=m,e.CollectionModule=b,e.CollectionsListData=g,e.DataFlatNode=p,e.DataNode=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=collection.umd.min.js.map