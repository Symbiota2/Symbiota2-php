parameters:
    env(DATABASE_URL): ''
    env(DATABASE_DRIVER): ''
    env(DATABASE_SERVER_VERSION): ''
doctrine:
    dbal: { schema_filter: ~^(?!s1_)~, driver: '%env(resolve:DATABASE_DRIVER)%', server_version: '%env(resolve:DATABASE_SERVER_VERSION)%', url: '%env(resolve:DATABASE_URL)%', types: { geometry: Core\Spatial\DBAL\Types\GeometryType, point: Core\Spatial\DBAL\Types\Geometry\PointType, polygon: Core\Spatial\DBAL\Types\Geometry\PolygonType, linestring: Core\Spatial\DBAL\Types\Geometry\LineStringType }, mapping_types: { _text: string } }
    orm: { auto_generate_proxy_classes: true, naming_strategy: doctrine.orm.naming_strategy.underscore, auto_mapping: true, dql: { numeric_functions: { st_contains: Core\Spatial\ORM\Query\AST\Functions\MySql\STContains, contains: Core\Spatial\ORM\Query\AST\Functions\MySql\Contains, st_area: Core\Spatial\ORM\Query\AST\Functions\MySql\Area, st_geomfromtext: Core\Spatial\ORM\Query\AST\Functions\MySql\GeomFromText, st_intersects: Core\Spatial\ORM\Query\AST\Functions\MySql\STIntersects, st_buffer: Core\Spatial\ORM\Query\AST\Functions\MySql\STBuffer, point: Core\Spatial\ORM\Query\AST\Functions\MySql\Point } }, mappings: { Core: { is_bundle: false, type: annotation, dir: '%kernel.project_dir%/src/api/Entity', prefix: Core\Entity, alias: Core } } }
