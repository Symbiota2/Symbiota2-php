security:
    access_decision_manager:
        strategy: affirmative
    encoders:
        Core\Entity\Users: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory: { memory: ~ }
        database:
            entity:
                class: Core\Entity\Users
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                #Authentication occurs here and token generation
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - Core\Guard\TokenAuthenticator
            user_checker: Core\Guard\ValidUserCheck
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
